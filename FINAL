#include<cmath>
# include "iGraphics.h"
#define  pi acos(-1)*2.00
int ini=0;
int flag1=0,flag2=0,flag3=0,flag4=0,flag5=0;
double arr[21000]={0};
double arr1[21000]={0};
double arr2[21000]={0};
double arr3[21000]={0};
int xm1=0, ym1=400,xm2=1800,ym2=400,xm3=900,ym3=0,xm4=900,ym4=800, radius =10,radius1=10,radius2=10,radius3=10;
double posx=0,posy=ym1,size=0.5,posx1=0,posy1=ym1,posx2=0,posy2=ym1,posx3=0,posy3=0;
double t,diff,sum,k1=1,k2=2,k3=3;
double period=1.00,amp1=100,amp2=200,amp3=300,x;
double dx1=0,dy1=ym2,dx2=0,dy2=ym2,dx3=0,dy3=ym2;
double ballx=0,ballx1=0,ballx2=0,ballx3=0;
int posi=0,posi1=0,posi2=0,posi3=0,var=1,var1=1,var2=1,var3=1,var4=1;
double velocity=0.5;
int time1=1;
double fristballx=0,fristbally=0;
/*	function iDraw() is called again and again by the system.
*/


void graph(int v)
{


    if(var==1){


    if(posx>1800)
   {
       posx=0;

   }
while(posx<=xm2){
        posi=(int)posx*10;

        if(arr[posi]==0 || flag1==1)

            {
        diff=posx-xm3;
//x=pi;
//printf("%lf %lf %lf\n",x,period,x/period);
//x=pi/period;
x=(pi/180.00)*diff;
sum=amp1*sin(x*k1);
//printf("x = %lf sum or y =%lf\n",x,sum);

posy=ym2+sum;

iSetColor(0,255,0);
//iFilledCircle(posx,posy,radius);
iPoint(posx,posy,size);
arr[posi]=posy;
        }

        else
        {
            iSetColor(0,255,0);
//iFilledCircle(posx,posy,radius);
iPoint(posx,arr[posi],size);

        }
//printf("%lf %lf\n",posx,posy);
    posx+=.1;
}
if(posx1>1800)
    posx1=0;
while(posx1<=xm2){
        posi1=posx1*10;
        if(arr1[posi1]==0 || flag2==1){
        diff=posx1-xm3;
//x=pi;
//printf("%lf %lf %lf\n",x,period,x/period);
//x=pi/period;
x=(pi/180.00)*diff;
sum=amp2*sin(x*k2);
//printf("x = %lf sum or y =%lf\n",x,sum);

posy1=ym2+sum;

iSetColor(0,0,255);
//iFilledCircle(posx,posy,radius);
iPoint(posx1,posy1,size);
arr1[posi1]=posy1;
        }
        else
        {
            iSetColor(0,0,255);
iPoint(posx1,arr1[posi1],size);
        }
//printf("%lf %lf\n",posx,posy);
    posx1+=0.1;
}
if(posx2>1800)
    posx2=0;
while(posx2<=xm2){
        posi2=posx2*10;
if(arr2[posi2]==0 || flag3==1){
        diff=posx2-xm3;
//x=pi;
//printf("%lf %lf %lf\n",x,period,x/period);
//x=pi/period;
x=(pi/180.00)*diff;
sum=amp3*cos(x*k3);
//printf("x = %lf sum or y =%lf\n",x,sum);

posy2=ym2+sum;

iSetColor(255,0,0);
//iFilledCircle(posx,posy,radius);
iPoint(posx2,posy2,size);
arr2[posi2]=posy2;
}
else
{
    iSetColor(255,0,0);
iPoint(posx2,arr2[posi2],size);

}
//printf("%lf %lf\n",posx,posy);
    posx2+=0.1;
}




if(posx3>1800)
    posx3=0;
while(posx3<=xm2){
        posi3=posx3*10;
if(arr3[posi3]==0 || flag4==1){
        diff=posx3-xm3;
//x=pi;
//printf("%lf %lf %lf\n",x,period,x/period);
//x=pi/period;
x=(pi/180.00)*diff;
sum=amp3*cos(x*k3)+amp1*sin(x*k1)+amp2*sin(x*k2);
//printf("x = %lf sum or y =%lf\n",x,sum);

posy3=ym2+sum;

iSetColor(0,141,44);
//iFilledCircle(posx,posy,radius);
iPoint(posx3,posy3,size);
arr3[posi3]=posy3;
}
else
{
    iSetColor(0,141,44);
iPoint(posx3,arr3[posi3],size);

}
//printf("%lf %lf\n",posx,posy);
    posx3+=0.1;
}
    }
}
void drawball()
{
    if(var1){
   iSetColor(0,255,0);
    iFilledCircle(fristballx,fristbally,radius);
    }
    if(var4){
    iSetColor(0,255,0);
    iFilledCircle(dx3,dy3,radius3);
    }

if(var3){
        iSetColor(0,255,0);
    iFilledCircle(dx2,dy2,radius2);
}



      if(var2){
        iSetColor(0,255,0);
    iFilledCircle(dx1,dy1,radius1);
      }

}


void iDraw()
{
   //  printf("idraw calling calling\n");

    iClear();

if(ini==0)
{
    iShowBMP(100,100,"help.bmp");
iSetColor(0,0,0);
 iText(200,700,"to show the curves press the right arrow key");
 iSetColor(0,0,0);
 iText(200,680,"to show/hide graphs press s/S");
 iSetColor(0,0,0);
 iText(200,660,"to show/hide the tracer press 1/2/3");
iSetColor(0,0,0);
 iText(200,640,"To increase/decrease speed press up/down aarrow");

iSetColor(0,0,0);
 iText(200,620,"To increase/decrease amplitude altogether press A/a");
 iSetColor(0,0,0);
 iText(200,600,"To increase/decrease frequency altogether press f/F");

iSetColor(0,0,0);
 iText(200,580,"To increase/decrease frequency   individually use z/Z ,x/X,c/C");
 iSetColor(0,0,0);
 iText(200,560,"To increase/decrease frequency amplitude  individually use q/Q ,w/W,e/E");



}
else{
    iSetColor(246,246,245);
iLine(xm1,ym1,xm2,ym2);
    iSetColor(246,246,245);
iLine(xm3,ym3,xm4,ym4);


graph(var);
    drawball();

}
}

/*
	function iMouseMove() is called when the user presses and drags the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouseMove(int mx, int my)
{
    //printf("x = %d, y= %d\n",mx,my);
    //place your codes here
}

/*
	function iMouse() is called when the user presses/releases the mouse.
	(mx, my) is the position where the mouse pointer is.
*/
void iMouse(int button, int state, int mx, int my)
{
    if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        //place your codes here
        //printf("x = %d, y= %d\n",mx,my);



    }
    if(button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
    {
        //place your codes here

    }
}

/*
	function iKeyboard() is called whenever the user hits a key in keyboard.
	key- holds the ASCII value of the key pressed.
*/
void iKeyboard(unsigned char key)
{
         printf("keyboard calling calling\n");

    if(key=='a')
    {
        flag1=1;
        flag2=1;
        flag3=1;
        flag4=1;
        amp1+=5;
        amp2+=5;
        amp3+=5;
    }


    if(key=='A')
    {
        flag1=1;
        flag2=1;
        flag3=1;
        flag4=1;
        if(amp1>100 && amp2>100 && amp3>100)
        {
            amp1-=5;
            amp2-=5;
            amp3-=5;
        }
    }
 if(key=='F')
    {
        flag1=1;
        flag2=1;
        flag3=1;
        flag4=1;
if(k1>1 && k2>1 && k3>1)
{
    k1-=0.1;
    k2-=.1;
    k3-=.1;
}
    }
if(key=='f')
    {
        flag1=1;
        flag2=1;
        flag3=1;
        flag4=1;
        k1+=0.1;
        k2+=0.1;
        k3+=.1;
    }



    if(key == 'q')
    {
        flag4=1;
   flag1=1;
        amp1+=5;

    }
        if(key == 'Q')
    {

        if(amp1>100){
        amp1-=5;
        flag1=1;
        flag4=1;
        }
    }
    if(key=='z')
    {
               flag4=1;

        flag1=1;
        k1+=0.1;

    }
     if(key=='Z')
    {

        if(k1>1){
        flag1=1;
                        flag4=1;

        k1-=0.1;
        }
    }
    if(key == 'w')
    {        flag4=1;

        flag2=1;

        amp2+=5;
    }
    if(key == 'W')
    {


        if(amp2>100){
        amp2-=5;
        flag2=1;
        flag4=1;
        }
    }
    if(key=='x')
    {         flag4=1;


            flag2=1;
            k2+=0.1;


    }
    if(key=='X')
    {

             if(k2>1){
            flag2=1;
            flag4=1;
            k2-=0.1;
        }


    }
    if(key == 'e')
    {
        flag4=1;
        flag3=1;
        amp3+=5;
    }
    if(key == 'E')
    {

        if(amp3>100){
        amp3-=5;
        flag3=1;
        flag4=1;
        }
    }
    if(key=='c')
    {
        flag3=1;
        k3+=0.1;
        flag4=1;
    }
if(key=='C')
{
    if(k3>1)
    {
        flag3=1;
        flag4=1;
        k3-=.1;
    }
}
    if(key=='s')
    {
        var=0;


    }
    if(key=='S')
    {
        var=1;
    }
    if(key=='4')
    {
        var4=var4 ^ 1;


    }
    if(key=='1')
    {
        var1=var1 ^ 1;


    }
    if(key=='2')
    {
        var2=var2 ^ 1;


    }
    if(key=='3')
    {
        var3=var3 ^ 1;


    }
    if(key == 'p')
	{
	    iPauseTimer(0);
		//do something with 'q'
//    time1=0;
	}
	if(key == 'r')
	{
	    //time1=1;
		iResumeTimer(0);
	}

}

    //place your codes for other keys here

void nabid()
{
 //   printf("nabid calling\n");

if(time){
if(ballx>1800)
ballx=0;
int u=ballx*10;
fristballx=ballx;
fristbally=arr[u];
   // printf(" posx %lf %d %lf %lf \n",posx,u,dx,dy);
ballx+=velocity;
}
}
void nabid2()
{

if(ballx1>1800)
ballx1=0;
int u2=ballx1*10;
dx1=ballx1;
dy1=arr1[u2];
ballx1+=velocity;
}
void nabid3()
{

if(ballx2>1800)
ballx2=0;
int u3=ballx2*10;
dx2=ballx2;
dy2=arr2[u3];
ballx2+=velocity;
}
void nabid4()
{
if(ballx3>1800)
ballx3=0;
int u4=ballx3*10;
dx3=ballx3;
dy3=arr3[u4];
ballx3+=velocity;
}



/*
	function iSpecialKeyboard() is called whenver user hits special keys like-
	function keys, home, end, pg up, pg down, arraows etc. you have to use
	appropriate constants to detect them. A list is:
	GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
	GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
	GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
	GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
*/
void iSpecialKeyboard(unsigned char key)
{
     printf("special keyboard calling calling\n");
if(key == GLUT_KEY_END)
	{
		exit(0);
	}

	if(key == GLUT_KEY_RIGHT)
	{

       ini=1 ^ ini;
      printf("yayy");
       }
    if(key == GLUT_KEY_UP)
    {
        velocity+=0.5;
    }

        if(key == GLUT_KEY_DOWN)
    {
        if(velocity>0.5)
        velocity-=0.5;
    }

}
void nabidmain()
{
                     nabid();
                     nabid2();
                     nabid3();
                     nabid4();
}


int main()
{

 printf("main calling\n");
 iSetTimer(10,nabidmain);


    iInitialize(1800, 800, "Demo!");
    return 0;
}
